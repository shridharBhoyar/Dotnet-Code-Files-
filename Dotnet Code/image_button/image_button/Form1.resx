<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAATYAAACiCAMAAAD84hF6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIZUExURfr7/////+Pr/JKYrc7T4Pv8/x4gKP++kO3w91iE6mrmyfrOP563855mScKn/PVulOZg
        ADVq5urw/e/0/hnMotTZ5ezv9/T3/uPm719nfrm+zsvQ3gAAAP/8//VljgAAClvWtzDSq4mPpcXGyhAT
        HZFZ/KyF/IWk8LfJ9nN1e4lJ/PPx//+6iPRgi1RdduDn+76h/Pbck5haN0d66VRggPimu2yK7dX08Bve
        sam/9PrMLf/Bis+xW/7z9v3m7PvI1Yfp0vaEo/zZ4vmzxZvezxsVIeVRAJlgSQAAJvHlx/Z5nPeOqmtz
        ifzi0wAAHP3Ywf7KpiNh5frpvv7Gn/q4yfmpvjprZWBiZ4uMkeRIAPG3nw8aJt+fmLqBbeTZ18ito+bd
        2/rdi/rUX/LFP82dRLJ+R/r16Sk0Ue2xh3+FmEVGTOqCT+hxMfTUyKanrPPDsOqCTedsJu2Yci4vN2lq
        cPSWXotrWM2adywnK1I7NH1UQKZxVv6EJ2VGOcSmm/ekbj8xL2NFOMaKfP+WTmc/KZxjdcLx6NPA3raQ
        f9vO/ZVdwJ5mLKBukpNb1qF1/V/HmtTE/t6+kp/RsMXDlaCUw8COReO1QbObusWlr/rsx7Shno+X0Xbb
        wXqO3qWJNWlYL05ELOa0HfrJC0ttekWWjTSvll9QdFB2zkNhqDZLfQsyZBgSAIp8tKeQ2mi5riolPxAA
        M4WkrrzTrktzJosAABdxSURBVHhe7Z2LXxvXlYB1DRfJYAIBYSmYkcDg2o4lE+NiHq5APGpig188GmJs
        DLGDYyfGbomf+BV3l3XbbJo0TZpsSXc3mzjZ7bbd3b9wz7n3zPuONFIkIfen72czo5nRaPRx7r3n3nkQ
        qFChQoUKFSpUqFChQoUKFSpUqFChQoUKf39EMkIbVXDQ3L0tE7RVBQfN5McD2qqCg787bVxAL4qGf23y
        eFzQWiec6RT9K5jghwZSqZSY0Q/Neoh0zE5obQ741hahJU6UrQYcduf8G9fWrr0x3xkolTjOTp57t/EY
        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
</value>
  </data>
</root>